name: Build & deploy

on: [push]

env:
  IMAGE: ghcr.io/${{ github.repository }}/rekrutteringsbistand-stilling-api:${{ github.sha }}

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17.x'
      - uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-cache-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-cache-
      - name: Run tests
        run: mvn verify
      - name: Install Snyk CLI
        uses: snyk/actions/setup@master
      - name: Test dependencies with Snyk
        run: snyk test --org=toi --fail-on=all --severity-threshold=medium
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ## Ved fix av prodfeil, sett continue-on-error=true, slik at workflow fortsetter selvom snyk finner sÃ¥rbarheter
        continue-on-error: false

  deploy-to-dev:
    name: Deploy to dev
    needs: test
    #########################
    ### DEVELOPERS: Insert your feature branch name below (in addition to master) if you want to deploy it to dev
    #########################
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/oppgrader-spring'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17.x'
      - uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-cache-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-cache-
      - name: Build jar with Maven
        run: mvn clean package
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE} .
          echo ${GITHUB_TOKEN} | docker login ghcr.io -u ${GITHUB_REPOSITORY} --password-stdin
          docker push ${IMAGE}
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          VAR: version=${{ env.IMAGE }}
          RESOURCE: nais/dev-nais.yaml

  deploy-to-prod:
    name: Deploy to prod
    needs: deploy-to-dev
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          VAR: version=${{ env.IMAGE }}
          RESOURCE: nais/prod-nais.yaml

  deploy-alerts-prod:
    name: Deploy alerts to prod
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/prod-alerts.yaml

  snyk-monitor:
    name: Monitor dependencies with Snyk
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Java v17.x
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17.x'
      - name: Install Snyk CLI
        uses: snyk/actions/setup@master
      - name: Monitor dependencies with Snyk
        run: >
          snyk monitor
          --org=toi
          --project-name=${{ github.repository }}
          --remote-repo-url=https://github.com/${{ github.repository }}.git
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
