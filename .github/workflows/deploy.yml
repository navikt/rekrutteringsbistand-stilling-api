name: Build & deploy

on: [push, workflow_dispatch]

permissions:
  packages: write
  contents: read
  id-token: write

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      - uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-cache-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-cache-
      - name: Run tests
        run: mvn verify

  deploy-to-dev:
    name: Deploy to dev
    needs: test
    if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/master' || github.ref == 'refs/heads/utvid_direktemeldtStilling_med_annonsenr'
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
      - uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-cache-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-cache-
      - name: Build jar with Maven
        run: mvn clean package
      - name: Push docker image to GAR and sign image
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: toi
          tag: ${{ contains(fromJSON('["refs/heads/master", "refs/heads/main"]'), github.ref) && 'latest' || github.sha }}
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          VAR: version=${{ steps.docker-build-push.outputs.image }}
          RESOURCE: nais/dev-nais.yaml

  deploy-to-prod:
    name: Deploy to prod
    needs: deploy-to-dev
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          VAR: version=${{ needs.deploy-to-dev.outputs.image }}
          RESOURCE: nais/prod-nais.yaml

  deploy-alerts-prod:
    name: Deploy alerts to prod
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: nais/prod-alerts.yaml

  call-trivy-security-scan:
    needs: deploy-to-dev
    uses: navikt/toi-github-actions-workflows/.github/workflows/trivy-security-scan.yaml@v1
    with:
      image: ${{ needs.deploy-to-dev.outputs.image }}
    permissions:
      id-token: write
      security-events: write
    secrets: inherit
